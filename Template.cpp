{
	"temp": {
		"prefix": "temp",
		"body": [
		  "#include <bits/stdc++.h>",
		  "using namespace std;",
		  "/***********************************************************",
		  "************************/",
		  "#define int long long",
		  "#define ll long long int",
		  "#define nl \"\\n\"",
		  "#define printT(x,y) cout << \"#For= \" << x << \" Value= \" << y << nl",
		  "#define print(x) cout << x << nl",
		  "#define printBinary(x) print(bitset<64>(x).to_string());",
		  "#define YES cout << \"Yes\" << nl",
		  "#define NO cout << \"No\" << nl",
		  "#define printArr(x) for(auto i:x) cout << i <<  \" \"",
		  "#define fr(i,n) for(int i=0; i<(n); i++)",
		  "#define cSort(x) sort(x.begin(), x.end())",
		  "#define cReverse(x) reverse(x.begin(), x.end())",
		  "#define maxe(x) *max_element(x.begin(),x.end())",
		  "#define mine(x) *min_element(x.begin(),x.end())",
		  "#define takeArr(x) for(auto &i:x) cin >> i",
		  "#define all(x) (x.begin(),x.end())",
		  "#define unq(v)  v.resize(distance(v.begin(), unique(v.begin(), v.end())));",
		  "#define toLower(x) transform(x.begin(), x.end(), x.begin(), ::tolower)",
		  "#define toUpper(x) transform(x.begin(), x.end(), x.begin(), ::toupper)",
		  "#define cFind(arr,x) find(arr.begin(),arr.end(),x)-arr.begin()",
		  "#define cCount(arr,x) count(arr.begin(),arr.end(),x)",
		  "#define mem(a , b) memset(a, b ,sizeof(a))",
		  "/***********************************************************",
		  "************************/",
		  "int ceil(int x,int y){return (x+y-1)/y;}",
		  "int lcm(int a, int b){return (a / __gcd(a, b)) * b;}",
		  "void fastio(){",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    cout.tie(NULL);",
		  "}",
		  "/*-------------------------------------------------------------------------------------------------*/",
		  "const int mxn=1e9;",
		  "void solve(){",
		  "  ","  ",
		  "}",
		  "",
		  "signed main(){",
		  "    fastio();",
		  "    int t=1;",
		  "    // cin>>t;",
		  "    while(t--)solve();",
		  "    return 0;",
		  "}"
		],
		"description": "cpp template"
	  },
	  "ncr": {
		"prefix": "ncr",
		"body": [
		  "int binpow(int a, int b, int m=mod) {",
		  "    a %= m;",
		  "    int res = 1;",
		  "    while (b > 0) {",
		  "        if (b & 1)",
		  "            res = res * a % m;",
		  "        a = a * a % m;",
		  "        b >>= 1;",
		  "    }",
		  "    return res;",
		  "}",
		  "int modInverse(int a,int p=mod){",
		  "    //p must be prime.",
		  "    return binpow(a,p-2,p);",
		  "}",
		  "int nCr(int n,int r,int p=mod){",
		  "    if(n<r)return 0;",
		  "    if(r==0)return 1;",
		  "    vector<int>fact(n+1,0);",
		  "    fact[0]=1;",
		  "    for(int i=1;i<=n;i++){",
		  "        fact[i]=fact[i-1]*i;",
		  "        fact[i]%=p;",
		  "    }",
		  "    // fact[n]/(fact[r]*fact[n-r]);",
		  "    return (fact[n]*modInverse(fact[r],p)%p*modInverse(fact[n-r],p)%p)%p;",
		  "}"
		],
		"description": "NCR"
	  },
	  "binpow": {
		"prefix": "binpow",
		"body": [
		  "int binpow(int a, int b,int p=mod) {",
		  "    int res = 1;",
		  "    while (b > 0) {",
		  "        if (b & 1)",
		  "            res = (res * a)%p;",
		  "        a = (a * a)%p;",
		  "        b >>= 1;",
		  "    }",
		  "    return res;",
		  "}"
		],
		"description": "binpow"
	  }

}
